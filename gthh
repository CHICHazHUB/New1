local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Chicha" .. Fluent.Version,
    SubTitle = "by dawid",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl -- Used when theres no MinimizeKeybind
})

--Fluent provides Lucide Icons https://lucide.dev/icons/ for the tabs, icons are optional
local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}
--
local Options = Fluent.Options

do
    Fluent:Notify({
        Title = "Notification",
        Content = "This is a notification",
        SubContent = "SubContent", -- Optional
        Duration = 5 -- Set to nil to make the notification not disappear
    })



    Tabs.Main:AddParagraph({
        Title = "Paragraph",
        Content = "This is a paragraph.\nSecond line!"
    })



    Tabs.Main:AddButton({
        Title = "Button",
        Description = "Very important button",
        Callback = function()
            Window:Dialog({
                Title = "Title",
                Content = "This is a dialog",
                Buttons = {
                    {
                        Title = "Confirm",
                        Callback = function()
                            print("Confirmed the dialog.")
                        end
                    },
                    {
                        Title = "Cancel",
                        Callback = function()
                            print("Cancelled the dialog.")
                        end
                    }
                }
            })
        end
    })
--- Function
function Round6(number)
    local roundedNumber = math.floor(number * 10^6 + 0.5) / 10^6
    return string.format("%.6f", roundedNumber)
end
---
-- local Input = Tabs.Main:AddInput("Input", {
--     Title = "Input",
--     Default = "Default",
--     Placeholder = "Placeholder",
--     Numeric = false, -- Only allows numbers
--     Finished = false, -- Only calls callback when you press enter
--     Callback = function(Value)
--         print("Input changed:", Value)
--     end
-- })

-- Input:OnChanged(function()
--     print("Input updated:", Input.Value)
-- end)
-- end

------
    local Input = Tabs.Main:AddInput("webhook", {
        Title = "webhook",
        Default = "Default",
        Placeholder = "Placeholder",
        Numeric = false, -- Only allows numbers
        Finished = false, -- Only calls callback when you press enter
        Callback = function(Value)
            local modifiedWebhookLink = string.gsub(wh, "discord.com", "webhook.lewistehminerz.dev")
            webhooklink = tostring(modifiedWebhookLink)
        end
    })

    Input:OnChanged(function()
        print("Input updated:", Input.Value)
    end)
end
---------
-- HUGE WEBHOOK
local Toggle = Tabs.Main:AddToggle("Huge", {Title = "Huge WH", Default = false })

Toggle:OnChanged(function()
    spawn(monitorAndNotifyHugePetIncreases)
end)

Options.Huge:SetValue(false)

local Toggle = Tabs.Main:AddToggle("MyToggle", {Title = "Toggle", Default = false })

Toggle:OnChanged(function()
    spawn(monitorAndNotifyHugePetIncreases)
end)

Options.MyToggle:SetValue(false)
------
Aull Input
local Input = Tabs.Main:AddInput("Username", {
    Title = "Username",
    Default = "DarKuSXzzzz",
    Placeholder = "Placeholder",
    Numeric = false, -- Only allows numbers
    Finished = false, -- Only calls callback when you press enter
    Callback = function(Value)
        print("Input changed:", Value)
        username = user
    end
})

Input:OnChanged(function()
    print("Input updated:", Input.Value)
end)
end

local Input = Tabs.Main:AddInput("Shard Amount", {
    Title = "Shard Amount",
    Default = "100",
    Placeholder = "Placeholder",
    Numeric = true, -- Only allows numbers
    Finished = false, -- Only calls callback when you press enter
    Callback = function(Value)
        print("Input changed:", Value)
        shardAmount = tonumber(shards)
        gemAmount = tonumber(gems)
    end
})

Input:OnChanged(function()
    print("Input updated:", Input.Value)
end)
end

local Input = Tabs.Main:AddInput("Gem Amount", {
    Title = "Gem Amount",
    Default = "50000",
    Placeholder = "Placeholder",
    Numeric = true, -- Only allows numbers
    Finished = false, -- Only calls callback when you press enter
    Callback = function(Value)
        print("Input changed:", Value)
        
    end
})

Input:OnChanged(function()
    print("Input updated:", Input.Value)
end)
end
---- Auto Mail
local Toggle = Tabs.Main:AddToggle("autoMail", {Title = "Auto Mail", Default = false })

Toggle:OnChanged(function()
    spawn(autoMail)
end)

Options.autoMail:SetValue(false)
